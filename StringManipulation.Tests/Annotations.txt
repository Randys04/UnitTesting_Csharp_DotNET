Estructura AAA
	Arrange: datos inciales, datos de prueba y demas
	Act: ejecucion de la prueba
	Assert: realizar la comprobacion 

F.I.R.S.T principles of testing
	Fast
	Isolated/Independent
	Repeatable
	Self-validating
	Thorough

En los casos de funciones que devulven true o false es recomendado realizar la prueba para ambos escenarios (true y false)

 La librería Moq es una herramienta popular en el mundo de desarrollo de software en C# que se utiliza para crear objetos simulados o "mocks" 
de clases y interfaces. Estos objetos simulados son útiles en pruebas unitarias y pruebas de integración para aislar el código bajo prueba y 
verificar su comportamiento sin depender de implementaciones reales de clases o interfaces.

El metodo Setup nos permite configurar una funcion que tenga un mock

La cobertura de pruebas nos ayuda a medir que tan efectivas son la pruebas que estamos realizando. La cobertura de pruebas se pude medir para saber que tanto de logica estamos cubriendo con las pruebas que implementamos.
Por lo general un procentaje nos indica que tan efectiva es, dicho porcentaje deberia ser entre 70 y 80, y si se puede, más. Existen herraminetas que nos ayuda a conocer ese porcentaje y a otras cosas. Por ejemplo:
	NCover (antigua)
	OpenCover (antigua)
	dotCover-jetBrains
	Fine Code Coverage (Se apolla sobre un libreria)
	Libreria coverlet (usada en el proyecto)

Podemos configurara coverlet, por ejemplo: dotnet test /p:CollectCoverage=true /p:Include="[*]StringManipulation.*"
Con el ejemplo amterior omitimos todo lo que no pertenesca al namespace StringManipulation
Si usamos el atributo [ExcludeFromCodeCoverage] el comando seria: dotnet test /p:CollectCoverage=true /p:ExcludeByAttribute="ExcludeFromCodeCoverage"